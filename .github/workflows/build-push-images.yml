name: Maven Docker Build

on:
  push:
    branches:
      - main
      - feature/*
      - fix/*
      - chore/*
  workflow_dispatch:
jobs:
  push-docker-images:
    permissions: write-all
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "."
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: "Get git tag"
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "TAG=$TAG" >> $GITHUB_ENV

        env:
          TAG: ${{ steps.git_tag.outputs.tag }}

      - name: "Build Images"
        run: |
          docker build -t appointment:$TAG -f Dockerfile

      - name: "Check Branch Name"
        id: check_branch
        run: |
          if [ "${GITHUB_REF#refs/heads/}" != "main" ]; then
            echo "Branch is not 'main'."
            echo "::set-output name=append_beta::true"
          else
            echo "On the 'main' branch."
            echo "::set-output name=append_beta::false"
          fi
      - name: "Push Images"
        id: push_images
        run: |
          append_beta=${{ steps.check_branch.outputs.append_beta }}
          if [ "$append_beta" == "true" ]; then
            BETA_TAG="${TAG}-beta" 
          else
            BETA_TAG="$TAG"
          fi
          echo "Generated tag: $BETA_TAG"
          BETA_TAG="$BETA_TAG" >> $GITHUB_ENV
          docker tag appointment:$TAG ${{ secrets.REGISTRY }}/${{ secrets.PIDUSER }}/appointment:$BETA_TAG
        # - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=rateme-nextgen
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.tests=src/test/
            -Dsonar.sources=src/main/java/
            -Dsonar.java.binaries=target
            -Dsonar.verbose=true
